{"version":3,"file":"static/js/957.2906b417.chunk.js","mappings":"2NAGe,SAASA,EAAT,GAAoC,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,QAC/BC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,4BACE,uBAAKF,KACL,mBAAQG,KAAK,SAASC,QALL,kBAAMH,GAASI,EAAAA,EAAAA,IAAcN,GAA7B,EAKjB,sBAKL,CCfM,IAAMO,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECAvB,SAASC,IACtB,IAAMJ,GAAWK,EAAAA,EAAAA,IAAYH,GAE7B,OACE,wBACGF,EAASM,KAAI,gBAAGf,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAP,OACZ,yBACE,SAACF,EAAD,CAASC,GAAIA,EAAIC,QAASA,KADnBD,EADG,KAOnB,C,sBCXc,SAASgB,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACE,GAA4BF,EAAAA,EAAAA,UAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMnB,GAAWC,EAAAA,EAAAA,MACXM,GAAWK,EAAAA,EAAAA,IAAYH,GAuB/B,OACE,kBAAMW,SAda,SAAAC,GACnBA,EAAEC,iBADsB,gBAELf,GAFK,IAExB,2BAA4B,CACxB,GADwB,QACfS,OAASA,EAEd,YADAO,MAAK,UAAKP,EAAL,2BAGV,CAPqB,+BAQtBhB,GAASwB,EAAAA,EAAAA,IAAW,CAACR,KAAAA,EAAME,OAAAA,KAC3BD,EAAQ,IACRE,EAAU,EACb,EAGC,WACE,qCAEI,kBACEjB,KAAK,OACLc,KAAK,OACLS,MAAOT,EACPU,SA7BiB,SAAAC,GACrBV,EAAQU,EAAMC,cAAcH,MAC7B,EA4BKI,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAEZ,uCAEI,kBACE7B,KAAK,MACLc,KAAK,SACLS,MAAOP,EACPQ,SApCmB,SAAAC,GACzBR,EAAUQ,EAAMC,cAAcH,MAC/B,EAmCOI,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAEhB,mBAAQ7B,KAAK,SAAb,2BAGL,CCnDc,SAAS8B,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXgC,GAAYrB,EAAAA,EAAAA,IAAYP,GAM9B,OAJA6B,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAGF,iCAEI,8CAEF,SAACc,EAAD,KACA,yBAAMmB,GAAa,4BACnB,SAACtB,EAAD,MAGL,C","sources":["components/Contact/Contact.jsx","redux/contacts/selectors.jsx","components/ContactList/ContactList.jsx","components/ContactEditor/ContactEditor.jsx","pages/contacts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport default function Contact ({ id, contact }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div >\n      <p >{contact}</p>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","import { useSelector } from 'react-redux';\nimport Contact from '../Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <ul >\n      {contacts.map(({ id, contact }) => (\n        <li key={id}>\n          <Contact id={id} contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from \"redux/contacts/selectors\";\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactEditor() {\n  const [name, setName] = useState('');\n    const [number, setNumber] = useState(0);\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectAllContacts);\n\n    const handleChangeName = event => {\n        setName(event.currentTarget.value);\n      };\n    \n      const handleChangeNumber = event => {\n        setNumber(event.currentTarget.value);\n      };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    for (const item of contacts){\n        if (item.name === name ){\n            alert (`${name} is already in contacts`);\n            return; \n        } \n      }\n      dispatch(addContact({name, number}));\n      setName('');\n      setNumber(0);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n          Name\n          <input \n            type=\"text\" \n            name='name' \n            value={name} \n            onChange = { handleChangeName }\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required/>\n        </label>\n        <label>\n            Number\n            <input \n              type=\"tel\" \n              name='number' \n              value={number} \n              onChange = { handleChangeNumber }\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required/>\n        </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactEditor from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n\n        <title>Your Contacts</title>\n      \n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Contact","id","contact","dispatch","useDispatch","type","onClick","deleteContact","selectLoading","state","contacts","loading","selectAllContacts","items","ContactList","useSelector","map","ContactEditor","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","alert","addContact","value","onChange","event","currentTarget","pattern","title","required","ContactsPage","isLoading","useEffect","fetchContacts"],"sourceRoot":""}